///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ChatThreadDataFollowups {
/*
{
  "id": 1,
  "question_id": 3,
  "response": "Hello this is my second question",
  "asked_on": "2021-09-17 10:31:13",
  "responded_by": 0,
  "patient_id": 7,
  "doctor_id": 1,
  "media_type": "none",
  "has_file": 0,
  "media_url": null,
  "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
  "created_at": "2021-09-17T10:31:13.000000Z",
  "updated_at": "2021-09-17T10:31:13.000000Z",
  "read_status": 0
} 
*/

  int? id;
  int? questionId;
  String? response;
  String? askedOn;
  int? respondedBy;
  int? patientId;
  int? doctorId;
  String? mediaType;
  int? hasFile;
  String? mediaUrl;
  String? mask;
  String? createdAt;
  String? updatedAt;
  int? readStatus;

  ChatThreadDataFollowups({
    this.id,
    this.questionId,
    this.response,
    this.askedOn,
    this.respondedBy,
    this.patientId,
    this.doctorId,
    this.mediaType,
    this.hasFile,
    this.mediaUrl,
    this.mask,
    this.createdAt,
    this.updatedAt,
    this.readStatus,
  });
  ChatThreadDataFollowups.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    questionId = json["question_id"]?.toInt();
    response = json["response"]?.toString();
    askedOn = json["asked_on"]?.toString();
    respondedBy = json["responded_by"]?.toInt();
    patientId = json["patient_id"]?.toInt();
    doctorId = json["doctor_id"]?.toInt();
    mediaType = json["media_type"]?.toString();
    hasFile = json["has_file"]?.toInt();
    mediaUrl = json["media_url"]?.toString();
    mask = json["mask"]?.toString();
    createdAt = json["created_at"]?.toString();
    updatedAt = json["updated_at"]?.toString();
    readStatus = json["read_status"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = {};
    data["id"] = id;
    data["question_id"] = questionId;
    data["response"] = response;
    data["asked_on"] = askedOn;
    data["responded_by"] = respondedBy;
    data["patient_id"] = patientId;
    data["doctor_id"] = doctorId;
    data["media_type"] = mediaType;
    data["has_file"] = hasFile;
    data["media_url"] = mediaUrl;
    data["mask"] = mask;
    data["created_at"] = createdAt;
    data["updated_at"] = updatedAt;
    data["read_status"] = readStatus;
    return data;
  }
}

class ChatThreadDataQuestionLastresponse {
/*
{
  "id": 1,
  "question_id": 3,
  "response": "Hello this is my second question",
  "asked_on": "2021-09-17 10:31:13",
  "responded_by": 0,
  "patient_id": 7,
  "doctor_id": 2,
  "media_type": "none",
  "has_file": 0,
  "media_url": null,
  "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
  "created_at": "2021-09-17T10:31:13.000000Z",
  "updated_at": "2021-09-17T10:31:13.000000Z",
  "read_status": 0
} 
*/

  int? id;
  int? questionId;
  String? response;
  String? askedOn;
  int? respondedBy;
  int? patientId;
  int? doctorId;
  String? mediaType;
  int? hasFile;
  String? mediaUrl;
  String? mask;
  String? createdAt;
  String? updatedAt;
  int? readStatus;

  ChatThreadDataQuestionLastresponse({
    this.id,
    this.questionId,
    this.response,
    this.askedOn,
    this.respondedBy,
    this.patientId,
    this.doctorId,
    this.mediaType,
    this.hasFile,
    this.mediaUrl,
    this.mask,
    this.createdAt,
    this.updatedAt,
    this.readStatus,
  });
  ChatThreadDataQuestionLastresponse.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    questionId = json["question_id"]?.toInt();
    response = json["response"]?.toString();
    askedOn = json["asked_on"]?.toString();
    respondedBy = json["responded_by"]?.toInt();
    patientId = json["patient_id"]?.toInt();
    doctorId = json["doctor_id"]?.toInt();
    mediaType = json["media_type"]?.toString();
    hasFile = json["has_file"]?.toInt();
    mediaUrl = json["media_url"]?.toString();
    mask = json["mask"]?.toString();
    createdAt = json["created_at"]?.toString();
    updatedAt = json["updated_at"]?.toString();
    readStatus = json["read_status"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = {};
    data["id"] = id;
    data["question_id"] = questionId;
    data["response"] = response;
    data["asked_on"] = askedOn;
    data["responded_by"] = respondedBy;
    data["patient_id"] = patientId;
    data["doctor_id"] = doctorId;
    data["media_type"] = mediaType;
    data["has_file"] = hasFile;
    data["media_url"] = mediaUrl;
    data["mask"] = mask;
    data["created_at"] = createdAt;
    data["updated_at"] = updatedAt;
    data["read_status"] = readStatus;
    return data;
  }
}

class ChatThreadDataQuestion {
/*
{
  "id": 3,
  "patient_id": 7,
  "doctor_id": 2,
  "asked_on": "2021-09-15 16:37:17",
  "responded_on": null,
  "question": "hello Doc",
  "question_category_id": 1,
  "state": 0,
  "read_status": 0,
  "media_type": "none",
  "has_file": 0,
  "media_url": null,
  "mask": "946787f8-e632-4745-b811-c7914e09ce0a",
  "created_at": "2021-09-15T16:37:17.000000Z",
  "updated_at": "2021-09-15T16:37:17.000000Z",
  "lastresponse": {
    "id": 1,
    "question_id": 3,
    "response": "Hello this is my second question",
    "asked_on": "2021-09-17 10:31:13",
    "responded_by": 0,
    "patient_id": 7,
    "doctor_id": 2,
    "media_type": "none",
    "has_file": 0,
    "media_url": null,
    "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
    "created_at": "2021-09-17T10:31:13.000000Z",
    "updated_at": "2021-09-17T10:31:13.000000Z",
    "read_status": 0
  }
} 
*/

  int? id;
  int? patientId;
  int? doctorId;
  String? askedOn;
  String? respondedOn;
  String? response;
  int? questionCategoryId;
  int? state;
  int? readStatus;
  String? mediaType;
  int? hasFile;
  String? mediaUrl;
  String? mask;
  String? createdAt;
  String? updatedAt;
  ChatThreadDataQuestionLastresponse? lastresponse;

  ChatThreadDataQuestion({
    this.id,
    this.patientId,
    this.doctorId,
    this.askedOn,
    this.respondedOn,
    this.response,
    this.questionCategoryId,
    this.state,
    this.readStatus,
    this.mediaType,
    this.hasFile,
    this.mediaUrl,
    this.mask,
    this.createdAt,
    this.updatedAt,
    this.lastresponse,
  });
  ChatThreadDataQuestion.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    patientId = json["patient_id"]?.toInt();
    doctorId = json["doctor_id"]?.toInt();
    askedOn = json["asked_on"]?.toString();
    respondedOn = json["responded_on"]?.toString();
    response = json["question"]?.toString();
    questionCategoryId = json["question_category_id"]?.toInt();
    state = json["state"]?.toInt();
    readStatus = json["read_status"]?.toInt();
    mediaType = json["media_type"]?.toString();
    hasFile = json["has_file"]?.toInt();
    mediaUrl = json["media_url"]?.toString();
    mask = json["mask"]?.toString();
    createdAt = json["created_at"]?.toString();
    updatedAt = json["updated_at"]?.toString();
    lastresponse = (json["lastresponse"] != null)
        ? ChatThreadDataQuestionLastresponse.fromJson(json["lastresponse"])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = {};
    data["id"] = id;
    data["patient_id"] = patientId;
    data["doctor_id"] = doctorId;
    data["asked_on"] = askedOn;
    data["responded_on"] = respondedOn;
    data["question"] = response;
    data["question_category_id"] = questionCategoryId;
    data["state"] = state;
    data["read_status"] = readStatus;
    data["media_type"] = mediaType;
    data["has_file"] = hasFile;
    data["media_url"] = mediaUrl;
    data["mask"] = mask;
    data["created_at"] = createdAt;
    data["updated_at"] = updatedAt;
    if (lastresponse != null) {
      data["lastresponse"] = lastresponse!.toJson();
    }
    return data;
  }

  @override
  String toString() {
    return "$lastresponse";
  }
}

class ChatThreadData {
/*
{
  "question": {
    "id": 3,
    "patient_id": 7,
    "doctor_id": 2,
    "asked_on": "2021-09-15 16:37:17",
    "responded_on": null,
    "question": "hello Doc",
    "question_category_id": 1,
    "state": 0,
    "read_status": 0,
    "media_type": "none",
    "has_file": 0,
    "media_url": null,
    "mask": "946787f8-e632-4745-b811-c7914e09ce0a",
    "created_at": "2021-09-15T16:37:17.000000Z",
    "updated_at": "2021-09-15T16:37:17.000000Z",
    "lastresponse": {
      "id": 1,
      "question_id": 3,
      "response": "Hello this is my second question",
      "asked_on": "2021-09-17 10:31:13",
      "responded_by": 0,
      "patient_id": 7,
      "doctor_id": 2,
      "media_type": "none",
      "has_file": 0,
      "media_url": null,
      "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
      "created_at": "2021-09-17T10:31:13.000000Z",
      "updated_at": "2021-09-17T10:31:13.000000Z",
      "read_status": 0
    }
  },
  "followups": [
    {
      "id": 1,
      "question_id": 3,
      "response": "Hello this is my second question",
      "asked_on": "2021-09-17 10:31:13",
      "responded_by": 0,
      "patient_id": 7,
      "doctor_id": 1,
      "media_type": "none",
      "has_file": 0,
      "media_url": null,
      "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
      "created_at": "2021-09-17T10:31:13.000000Z",
      "updated_at": "2021-09-17T10:31:13.000000Z",
      "read_status": 0
    }
  ]
} 
*/

  ChatThreadDataQuestion? question;
  List<ChatThreadDataFollowups?>? followups;

  ChatThreadData({
    this.question,
    this.followups,
  });
  ChatThreadData.fromJson(Map<String, dynamic> json) {
    question = (json["question"] != null)
        ? ChatThreadDataQuestion.fromJson(json["question"])
        : null;
    if (json["followups"] != null) {
      final v = json["followups"];
      final arr0 = <ChatThreadDataFollowups>[];
      v.forEach((v) {
        arr0.add(ChatThreadDataFollowups.fromJson(v));
      });
      followups = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = {};
    if (question != null) {
      data["question"] = question!.toJson();
    }
    if (followups != null) {
      final v = followups;
      final arr0 = [];
      for (var vi in v!) {
        arr0.add(vi!.toJson());
      }
      data["followups"] = arr0;
    }
    return data;
  }
}

class ChatThread {
/*
{
  "code": 200,
  "status": "success",
  "message": "",
  "data": {
    "question": {
      "id": 3,
      "patient_id": 7,
      "doctor_id": 2,
      "asked_on": "2021-09-15 16:37:17",
      "responded_on": null,
      "question": "hello Doc",
      "question_category_id": 1,
      "state": 0,
      "read_status": 0,
      "media_type": "none",
      "has_file": 0,
      "media_url": null,
      "mask": "946787f8-e632-4745-b811-c7914e09ce0a",
      "created_at": "2021-09-15T16:37:17.000000Z",
      "updated_at": "2021-09-15T16:37:17.000000Z",
      "lastresponse": {
        "id": 1,
        "question_id": 3,
        "response": "Hello this is my second question",
        "asked_on": "2021-09-17 10:31:13",
        "responded_by": 0,
        "patient_id": 7,
        "doctor_id": 2,
        "media_type": "none",
        "has_file": 0,
        "media_url": null,
        "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
        "created_at": "2021-09-17T10:31:13.000000Z",
        "updated_at": "2021-09-17T10:31:13.000000Z",
        "read_status": 0
      }
    },
    "followups": [
      {
        "id": 1,
        "question_id": 3,
        "response": "Hello this is my second question",
        "asked_on": "2021-09-17 10:31:13",
        "responded_by": 0,
        "patient_id": 7,
        "doctor_id": 1,
        "media_type": "none",
        "has_file": 0,
        "media_url": null,
        "mask": "946b0b05-abcc-4bd6-938a-f00b58a088a1",
        "created_at": "2021-09-17T10:31:13.000000Z",
        "updated_at": "2021-09-17T10:31:13.000000Z",
        "read_status": 0
      }
    ]
  }
} 
*/

  int? code;
  String? status;
  String? message;
  ChatThreadData? data;

  ChatThread({
    this.code,
    this.status,
    this.message,
    this.data,
  });
  ChatThread.fromJson(Map<String, dynamic> json) {
    code = json["code"]?.toInt();
    status = json["status"]?.toString();
    message = json["message"]?.toString();
    data =
        (json["data"] != null) ? ChatThreadData.fromJson(json["data"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = {};
    data["code"] = code;
    data["status"] = status;
    data["message"] = message;
    data["data"] = this.data!.toJson();
    return data;
  }
}
